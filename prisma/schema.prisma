// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider     = "mysql"
  url          = env("DATABASE_URL")
  relationMode = "prisma"
}

// Necessary for Next auth
model Account {
  id                String  @id @default(cuid())
  userId            String
  type              String
  provider          String
  providerAccountId String
  refresh_token     String? @db.Text
  access_token      String? @db.Text
  expires_at        Int?
  token_type        String?
  scope             String?
  id_token          String? @db.Text
  session_state     String?
  user              User    @relation(fields: [userId], references: [id], onDelete: Cascade)

  @@unique([provider, providerAccountId])
  @@index([userId])
}

model Session {
  id           String   @id @default(cuid())
  sessionToken String   @unique
  userId       String
  expires      DateTime
  user         User     @relation(fields: [userId], references: [id], onDelete: Cascade)

  @@index([userId])
}

model User {
  id               String       @id @default(cuid())
  name             String?
  email            String?      @unique
  emailVerified    DateTime?
  image            String?
  accounts         Account[]
  sessions         Session[]
  companies          Company[]
  requestedJobs    JobOffer[]   @relation("RequestedJobs")
  experience      Experience[]
  studies          Studies[]
  birthdate        DateTime?    @db.Date
  customName       String?
  customSecondName String?
  province         String?
  address          String?
}

model VerificationToken {
  identifier String
  token      String   @unique
  expires    DateTime

  @@unique([identifier, token])
}

model Company {
  id          String     @id @default(cuid())
  name        String
  phoneNumber Int?
  email       String?
  website     String?
  address     String?
  userId      String
  user        User       @relation(fields: [userId], references: [id])
  JobOffer    JobOffer[]

  @@index([userId])
}

model JobOffer {
  id          String       @id @default(cuid())
  title       String
  description String
  salary      String
  workTime    WorkTime
  contract    ContractType
  province    String
  companyId   String
  company     Company      @relation(fields: [companyId], references: [id])
  applicants  User[]       @relation("RequestedJobs")

  @@index([companyId])
}

model Experience {
  id          String   @id @default(cuid())
  companyName String
  role        String
  startDate   DateTime @db.Date
  endDate     DateTime @db.Date
  userId      String
  user        User     @relation(fields: [userId], references: [id])

  @@index([userId])
}

model Studies {
  id         String   @id @default(cuid())
  degreeName String
  degreeType String
  startDate  DateTime @db.Date
  endDate    DateTime @db.Date
  userId     String
  user       User     @relation(fields: [userId], references: [id])

  @@index([userId])
}

enum WorkTime {
  fullTime
  partTime
}

enum ContractType {
  indefinite
  fixed
  formation
}
